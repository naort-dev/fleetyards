---
http_interactions:
- request:
    method: get
    uri: https://robertsspaceindustries.com/orgs/oppf
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 09 Aug 2018 07:31:12 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - Rsi-Token=029b0fefab2f70c320c2d041d1cbc7d3; path=/; domain=.robertsspaceindustries.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      X-Cfu-Rendertime:
      - '0.023452997207642'
      X-Rsi-Version:
      - 1.8.8.0
      X-Frame-Options:
      - SameOrigin
      X-Cfu-Hostname:
      - web
      X-Cfu-Invoketime:
      - '0.047127962112427'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<html lang="en">
  <head>
    
      
      <meta charset="utf-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
      <meta name="viewport" content="width=device-width">
      <meta name="description" content="Roberts Space Industries is the official go-to website for all news  about Star Citizen and Squadron 42. It also hosts the online store for game items and merch, as well as all the community tools used by our fans.">
      <meta property="og:site_name" content="
  Operation Pitchfork [OPPF] - Organizations - Roberts Space Industries
" />
      <meta property="og:image" content="https://robertsspaceindustries.com/rsi/static/images/RSI-fb.jpg" />
      <meta property="og:description" content="Roberts Space Industries is the official go-to website for all news  about Star Citizen and Squadron 42. It also hosts the online store for game items and merch, as well as all the community tools used by our fans." />
      <meta property="og:type" content="website" />
      <meta property="og:url" content="https://robertsspaceindustries.com/orgs/oppf" />
      <meta property="og:locale" content="us_EN" />

      
      <link href="/rsi/static/css/cross-brand-less.css?v=1.8.8.0" media="all" rel="stylesheet">

      
      <script type="text/javascript" src="/cache/en/rsi-js.js?v=1.8.8.0"></script>
      
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-KHNFZPT');</script>
<!-- End Google Tag Manager -->

      <script>
        $(document).ready(function() {
          window.Common = new RSI.Common({});
          window.Main = new RSI.Main({
            'is_mobile': 0,
            'probation_cookie' : '',
            'require_captcha': 0
          });
          window.Mark = new Turbulent.Mark({ 'name' : 'Rsi-XSRF', 'token' : 'wO1rWw:rOQewnOkRf8bvn67MAbSXQ', 'ttl' : 1800 });

          window.WscOverlay = new RSI.WscOverlay({});

          var destinations = [];

window.Main.destinations = destinations;          
  window.Page = new RSI.Organization({});

        });

        $(window).load(function() {
          
        });

      </script>


      <script>
        window.recaptcha_is_loaded = false;
        window.on_recaptcha_load_callback = function() {
          window.recaptcha_is_loaded = true;
        };
      </script>

      <script src="https://www.google.com/recaptcha/api.js?onload=on_recaptcha_load_callback&render=explicit" async defer></script>

      <script type="text/javascript">

        

                                </script>


      <title>
  Operation Pitchfork [OPPF] - Organizations - Roberts Space Industries
</title>

      <link href="/cache/en/org-css.css?v=1.8.8.0" media="all" rel="stylesheet">

<script type="text/javascript" src="/cache/en/org-js.js?v=1.8.8.0"></script>

<link href="//fonts.googleapis.com/css?family=Michroma" rel="stylesheet" type="text/css">
<link href="//fonts.googleapis.com/css?family=Carrois+Gothic+SC" rel="stylesheet" type="text/css">
<link href="//fonts.googleapis.com/css?family=Allerta+Stencil" rel="stylesheet" type="text/css">
    

  <style>
    
      background:url(/rsi/static/images/noisebg.gif) repeat center top #000b11;
    
  </style>

  
  <link href="//fonts.googleapis.com/css?family=Electrolize|Orbitron:400,500,700|Share+Tech+Mono" rel="stylesheet" type="text/css">

  
  <link href="/cache/en/rsi-css.css?v=1.8.8.0" media="all" rel="stylesheet">
  
  

  </head>
  <body id="organization-page" class="default" >

    <div class="l-notification-bar l-notification-bar--rsi js-notification-bar">
  <div class="l-notification-bar__boxes">

    <div class="l-notification-bar__box is-hidden js-notification-bar-box js-notification-bar-box--cookie">
      <div class="c-notification  c-notification--cookie js-bottom-notif-msg-cookie">
  <div class="c-notification__inner">

    <div class="c-notification__content">
      <div class="c-notification__title">
        Cookies:
      </div>
      <div class="c-notification__message">
        Our website uses Google Analytics to analyze our traffic. <br/>To learn how you can control Google's use of your data and how you can opt out <a href='https://www.google.com/policies/privacy/partners/'>click here</a>.
      </div>
    </div>

    <div class="c-notification__actions">
              <div class="c-notification__wrapper-link">
                      <a href="https://www.google.com/policies/privacy/partners/" class="c-notification__button js-bottom-notif-link-cookie">
          
            <span class="c-notification__button-text">
              to change your settings
            </span>


            <span class="c-iconed__icon c-iconed__icon--arrow"></span>
          </a>
        </div>
      
              <span class="c-notification__actions-label">or</span>
      
              <div class="c-notification__wrapper-link">
          <a class="c-notification__button js-bottom-notif-btn-cookie">

            <span class="c-notification__button-text">
              Accept and close
            </span>

                          <span class="c-iconed__icon c-iconed__icon--checkmark"></span>
                      </a>
        </div>
          </div>

  </div>
</div>

    </div>

    <div class="l-notification-bar__box is-hidden js-notification-bar-box js-notification-bar-box--privacy">
      <div class="c-notification  c-notification--privacy js-bottom-notif-msg-privacy">
  <div class="c-notification__inner">

    <div class="c-notification__content">
      <div class="c-notification__title">
        Privacy Policy:
      </div>
      <div class="c-notification__message">
        Please read our Privacy Policy before accepting it. 
      </div>
    </div>

    <div class="c-notification__actions">
              <div class="c-notification__wrapper-link">
                      <a href="/privacy" class="c-notification__button js-bottom-notif-link-privacy">
          
            <span class="c-notification__button-text">
              Read our privacy policy
            </span>


            <span class="c-iconed__icon c-iconed__icon--arrow"></span>
          </a>
        </div>
      
              <span class="c-notification__actions-label">or</span>
      
              <div class="c-notification__wrapper-link">
          <a class="c-notification__button js-bottom-notif-btn-privacy">

            <span class="c-notification__button-text">
              Accept and close
            </span>

                          <span class="c-iconed__icon c-iconed__icon--checkmark"></span>
                      </a>
        </div>
          </div>

  </div>
</div>

    </div>

      </div>

</div>


    <div id="bodyWrapper">
      <header class='c-header-wrapper c-header-wrapper--rsi js-header-wrapper '  id='cross-brand-header'>

  <div class='c-platform-bar' id='platform-bar'>
    <div class="c-platform-bar__backdrop hidden"></div>

    <div class='c-top-menu-navigator c-top-menu-navigator--rsi '>
      <a href='/' class='c-top-menu-navigator__logo'>
        <span class="js-svg-inliner h-svg h-svg__logo-rsi"></span>
      </a>

     <a href="#" class="c-top-menu-navigator__mobile-menu-toggle js-toggle-mobile-menu ">
        <span></span>
      </a>

      <a href='#' class='c-top-menu-navigator__games-toggle js-toggle-games'>
        <span class='c-top-menu-navigator__games-toggle-title'>
          Games
          <div class='c-top-menu-navigator__games-toggle-arrow'>
            <span></span>
            <span></span>
          </div>
        </span>
      </a>
    </div>

    <nav class='c-cross-site-menu'>

              <a href='/citizencon' class='c-cross-site-menu-item c-cross-site-menu-item--citizencon'>Citizencon
          <div class='c-cross-site-menu-item-arrow'>
            <span></span>
            <span></span>
          </div>
        </a>
      
      <a href='/pledge' class='c-cross-site-menu-item c-cross-site-menu-item--store'>Pledge Store
        <div class='c-cross-site-menu-item-arrow'>
          <span></span>
          <span></span>
        </div>
      </a>

      <a href='//support.robertsspaceindustries.com' class='c-cross-site-menu-item c-cross-site-menu-item--support'>Support
        <div class='c-cross-site-menu-item-arrow'>
          <span></span>
          <span></span>
        </div>
      </a>

      <a href='/spectrum/community/SC' class='c-cross-site-menu-item c-cross-site-menu-item--spectrum'>Spectrum
        <div class='c-cross-site-menu-item-arrow'>
          <span></span>
          <span></span>
        </div>
      </a>

      <a href='/account/settings' class='c-cross-site-menu-item c-cross-site-menu-item--account js-toggle-account '>Account</a>
    </nav>

    <nav class='c-brand-selector js-brand-selector'>
      <a href='/star-citizen' class='c-brand-selector__link c-brand-selector__link--sc '>
        <div class='c-brand-selector__link-logo'>
            <span class="js-svg-inliner h-svg h-svg__logo-star-citizen--fullcolor"></span>
            <span class="js-svg-inliner h-svg h-svg__logo-star-citizen"></span>
        </div>
        <div class='c-brand-selector__link-text'>Join the Universe</div>
      </a>
      <a href='/squadron42' class='c-brand-selector__link c-brand-selector__link--s42 '>
        <div class='c-brand-selector__link-logo'>
            <span class="js-svg-inliner h-svg h-svg__logo-squadron42--fullcolor"></span>
            <span class="js-svg-inliner h-svg h-svg__logo-squadron42"></span>
        </div>
        <div class='c-brand-selector__link-text'>Start the adventure</div>
      </a>
      <a href='/' class='c-brand-selector__link c-brand-selector__link--rsi is-active'>
        <div class='c-brand-selector__link-logo'>
            <span class="js-svg-inliner h-svg h-svg__logo-rsi--fullcolor"></span>
            <span class="js-svg-inliner h-svg h-svg__logo-rsi"></span>

        </div>
        <div class='c-brand-selector__link-text'>Follow the Development</div>
      </a>
    </nav>
    <nav class='c-platform-bar__key-links c-platform-bar__key-links--rsi'>
      <a class="c-arrow-link c-arrow-link--color-rsi" href="/spectrum">
          <span class="c-arrow-link__arrow js-svg-inliner"></span>
          <span class="c-arrow-link__text c-arrow-link__text--allcaps">Launch Spectrum</span>
          <span class="c-arrow-link__description">Star Citizen's Community Forum and Chat Platform</span>
      </a>
      <a class="c-arrow-link c-arrow-link--color-rsi" href="/download">
          <span class="c-arrow-link__arrow c-arrow-link__arrow--download js-svg-inliner"></span>
          <span class="c-arrow-link__text c-arrow-link__text--allcaps">Download Star Citizen Launcher</span>
          <span class="c-arrow-link__description">Your Portal to Accessing and Playing the Game</span>
      </a>
    </nav>
  </div>

  <div class='c-right-sidebar c-right-sidebar--search' id="search-sidebar">
  <div class="js-toggle-search__backdrop hidden"></div>
  <a href="#" class='c-right-sidebar__back js-toggle-search'>Back
    <span></span>
    <span></span>
  </a>
  <form class='c-right-sidebar__form'>
    <h1 class='c-right-sidebar__form-title'>Search</h1>

    <input class='c-right-sidebar__form-input' type='text' id='header-search-input' placeholder="Search for articles" />

    <input class='c-right-sidebar__form-submit c-right-sidebar__form-submit--search' type="submit" value="Go" />
  </form>
</div>
      <div class='c-right-sidebar c-right-sidebar--signin' id="account-sidebar">
<div class="js-toggle-account__backdrop hidden"></div>
  <a href="#" class='c-right-sidebar__back js-toggle-account'>Back
    <span></span>
    <span></span>
  </a>

  <form method="post" class='c-right-sidebar__form c-right-sidebar__form--signin js-signin-form' id='signin-form'>

    <h1 class='c-right-sidebar__form-title'>Sign into RSI</h1>

    <div class="c-right-sidebar__form-error-message js-error-message"></div>

    <input name="login_id" class='c-right-sidebar__form-input' type='text' id='signin_input_loginid' placeholder='Login' />

    <input name="password" class='c-right-sidebar__form-input c-right-sidebar__form-password' type='password' id='signin_input_password' placeholder=Password />

    <div class="c-right-sidebar__form-captcha" id="signin-captcha"></div>

    <div class='l-oneline l-oneline--fill'>
      <div class='l-checkbox'>
        <input class='c-right-sidebar__form-checkbox' id='sidebar-login-remember-me' name='remember' type='checkbox' />
        <label class='c-right-sidebar__form-label c-right-sidebar__form-checkbox-label' for='sidebar-login-remember-me'>
          Remember me
        </label>
      </div>

      <input class='c-right-sidebar__form-submit c-right-sidebar__form-submit--login' type="submit" value="Sign In" />
      <span class="c-right-sidebar__form-success-message">
        <span class="js-svg-inliner h-svg c-account__icon c-account__icon-success"></span>
        Success
      </span>
    </div>
    

    <div class='l-oneline'>
      <a class='c-right-sidebar__form-icon-link js-show-recovery c-right-sidebar__form-icon-link--recovery' href=''>
        <span class="js-svg-inliner h-svg c-account__icon c-account__icon--smaller c-account__icon-lock"></span>
        Account Recovery
      </a>
      <a class='c-right-sidebar__form-icon-link c-right-sidebar__form-icon-link--enlist' href='/enlist?jumpto=%2Forgs%2Foppf'>
        <span class="js-svg-inliner h-svg c-account__icon c-account__icon--smaller c-account__icon-go"></span>
        Enlist Now
      </a>
    </div>
  </form>

  <form class='c-right-sidebar__form c-right-sidebar__form--recovery js-recovery-form is-hidden' id='recovery-form'>

    <h1 class='c-right-sidebar__form-title'>Account Recovery</h1>

    <div class="c-right-sidebar__form-error-message js-error-message"></div>

    <label for="signin_recovery_email" class="c-right-sidebar__form-label">Enter the e-mail address associated with your RSI account. We will email you with the instructions on how to create a new password.</label>

    <input name="email" class='c-right-sidebar__form-input' type='email' id='signin_recovery_email' placeholder='Your Email Address' />

    <input class='c-right-sidebar__form-submit c-right-sidebar__form-submit--recovery' type="submit" value="Submit" />
    <span class="c-right-sidebar__form-success-message">
      <span class="js-svg-inliner h-svg c-account__icon c-account__icon-success"></span>
      Success
    </span>

    <p class="slidedown-on-success">We've sent a recovery email to your email address. Click the link within to reset your password.</p>

    <div class='l-oneline'>
      <a class='c-right-sidebar__form-icon-link c-right-sidebar__form-icon-link--signin js-show-signin' href=''>
        <span class="js-svg-inliner h-svg c-account__icon c-account__icon--smaller c-account__icon-power"></span>
        Sign-In
      </a>
      <a class='c-right-sidebar__form-icon-link c-right-sidebar__form-icon-link--enlist' href='/enlist?jumpto=%2Forgs%2Foppf'>
        <span class="js-svg-inliner h-svg c-account__icon c-account__icon--smaller c-account__icon-go"></span>
        Enlist Now
      </a>
    </div>
    <a class='c-right-sidebar__form-icon-link c-right-sidebar__form-icon-link--support' href='//support.robertsspaceindustries.com'>
      <span class="js-svg-inliner h-svg c-account__icon c-account__icon--smaller c-account__icon-talk"></span>
      Contact Customer Support
    </a>
  </form>


  <form class='c-right-sidebar__form c-right-sidebar__form--two-step js-two-step-form is-hidden' id='two-step-form'>

    <h1 class='c-right-sidebar__form-title'>Two-Step Authentication</h1>

    <div class="c-right-sidebar__form-error-message js-error-message"></div>

    <label for="two_step_input_code" class="c-right-sidebar__form-label js-twostep-label">Enter the code generated by your authenticator or one of your backup codes</label>
    <input name="code" class='c-right-sidebar__form-input c-right-sidebar__form-input--code' type='text' id='code' placeholder='Authentication Code' />

    <label for="two_step_input_device" class="c-right-sidebar__form-label">Name of your Device</label>
    <input name="device_name" class='c-right-sidebar__form-input c-right-sidebar__form-input--device' type='text' id='device_name' placeholder='My Device' />
    <input type="hidden" name="device_type" id="device_type" value="" />

    <label for="two_step_input_device" class="c-right-sidebar__form-label">Trust this device for</label>
        

  
    <a class="js-selectlist selectlist " rel="" href="">
    <div class="arrow"></div>
    <span>Duration</span>
              <ul class="body">
              
                                                              <li class="js-option option " rel="session" >
                                                                        This session only
                                                    </li>
                                                                <li class="js-option option " rel="day" >
                                                                        1 day
                                                    </li>
                                                                <li class="js-option option " rel="week" >
                                                                        1 week
                                                    </li>
                                                                <li class="js-option option " rel="month" >
                                                                        1 month
                                                    </li>
                                                                <li class="js-option option " rel="year" >
                                                                        1 year
                                                    </li>
                                          
            </ul>
        <input type="hidden" name="duration" class="js-duration js-form-data" id="duration"/>
  </a>
  
    <input class='c-right-sidebar__form-submit c-right-sidebar__form-submit--twostep' type="submit" value="Authenticate" />
    <span class="c-right-sidebar__form-success-message">
      <span class="js-svg-inliner h-svg c-account__icon c-account__icon-success"></span>
      Success
    </span>

  </form>

</div>

<script>

$(document).ready(function() {
  this.signin = new RSI.Signin({
    //success_url: $(e.currentTarget).data('success-url-signin'),
    require_captcha: 0
  });
});
</script>  
  <div class="c-header-wrapper__backdrop js-toggle-games"></div>

</header>

<script type='text/javascript'>

  $(document).ready(function() {
    window.header = new RSI.Header({});
  });
</script>

      
  <header class='c-brand-menu c-brand-menu----rsi' id='brand-menu'>
  <div class='c-brand-menu__hamburger js-open-brand-menu'>
    <span></span>
    <span></span>
    <span></span>
  </div>
  <span class="c-brand-menu__section">
    
      Roberts Space Industries
    
  </span>
  <div class="c-brand-menu__backdrop"></div>
  <nav class="c-brand-menu__container">
    <div class="c-brand-menu__logo">
      <a href="/"><span class="h-svg h-svg__logo-rsi--fullcolor js-svg-inliner"></span> </a>
    </div>
    <div class="c-brand-menu__items-container">
      <ul class="c-brand-menu__items">
                <li class="c-brand-menu__item  ">
          <a class="c-menu-link c-menu-link----rsi c-brand-menu__link" href="/comm-link">
            <span class="c-brand-menu__item-text">Comm-Link</span>
                                  </a>
                  </li>
                <li class="c-brand-menu__item  has-submenu js-open-brand-submenu">
          <a class="c-menu-link c-menu-link----rsi c-brand-menu__link" href="/community">
            <span class="c-brand-menu__item-text">Community</span>
                                  </a>
                      <div class="c-brand-submenu">
              
                <a href="#" class="c-brand-submenu-back js-brand-submenu-close">
                  <span class="c-brand-submenu-back-text">Back /</span>
                  <span class="c-brand-submenu-back-section">Community</span>
                </a>
                <div class="c-brand-submenu__left"></div>
                <div class="c-brand-submenu__wrapper">
                  <ul class="c-brand-submenu__items">
                                      <li class="c-brand-submenu__item ">
                      <a href="/spectrum" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Spectrum
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/community/orgs" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Organizations
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/community/leaderboards/top" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Leaderboards
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/community_events" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Event
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/community" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Hub
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/fankit" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Fankit
                      </a>
                    </li>
                                    </ul>
                </div>
                <div class="c-brand-submenu__right"></div>
              
            </div>
                  </li>
                <li class="c-brand-menu__item  has-submenu js-open-brand-submenu">
          <a class="c-menu-link c-menu-link----rsi c-brand-menu__link" href="/roadmap">
            <span class="c-brand-menu__item-text">Development</span>
                                  </a>
                      <div class="c-brand-submenu">
              
                <a href="#" class="c-brand-submenu-back js-brand-submenu-close">
                  <span class="c-brand-submenu-back-text">Back /</span>
                  <span class="c-brand-submenu-back-section">Development</span>
                </a>
                <div class="c-brand-submenu__left"></div>
                <div class="c-brand-submenu__wrapper">
                  <ul class="c-brand-submenu__items">
                                      <li class="c-brand-submenu__item ">
                      <a href="/roadmap" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Roadmap
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/community/devtracker" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Dev Tracker
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/community/issue-council" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Issue Council
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/patch-notes" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Patch Notes
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/ship-matrix" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Ship Matrix
                      </a>
                    </li>
                                      <li class="c-brand-submenu__item ">
                      <a href="/funding-goals" class="c-brand-submenu__link c-menu-link c-menu-link--small c-menu-link----rsi">
                        Funding
                      </a>
                    </li>
                                    </ul>
                </div>
                <div class="c-brand-submenu__right"></div>
              
            </div>
                  </li>
              </ul>
    </div>

    <div class="c-brand-menu__cta">
      
          <a href="/star-citizen/fly-now" class="c-brand-cta-btn js-analytics">
            <div></div>
              <span class="c-brand-cta-btn__text">
                <strong>Fly now</strong>Alpha 3.2
              </span>
            <div></div>
          </a>
      
    </div>
  </nav>
</header>



      

  
  <div class="page-wrapper">
    
	  <div id="post-background" style="background-image:url('/media/bg4u5prbw8n2kr/background_blur/OPPF-Background.jpg');"></div>
	

    <div id="contentbody" class="public profile" style="">
      
<div id="organization" class="public">
	<div class="wrapper">
	<div class="content-wrapper">
	
	  <div class="heading ">
	<div class="banner"><img src="/media/x16e9fszu4o20r/banner/OPPF-Banner.png" /></div>
	
	<div class="inner">
		<div class="logo noshadow">
			<img src="/media/91scp32ik2k2ur/logo/OPPF-Logo.png" />
			<span class="count">5262 members</span>
		</div>
		<h1>Operation Pitchfork / <span class="symbol">OPPF</span></h1>
		<ul class="tags clearfix">
			<li class="model">Organization</li>
			<li class="commitment">Casual</li>
            		</ul>
		
		<ul class="focus clearfix">
						<li class="primary tooltip-wrap">
				<img src="/media/evjzzb5o9frbkr/icon/Scouting.png" alt="Scouting" />
				<div class="rsi-tooltip">
					<div class="content">Scouting</div>
					<span class="bottom"></span>
				</div>
			</li>
									<li class="secondary tooltip-wrap">
				<img src="/media/7nk9059i8lnfmr/icon/Security.png" alt="Security" />
				<div class="rsi-tooltip">
					<div class="content">Security</div>
					<span class="bottom"></span>
				</div>
			</li>
					</ul>
	</div>
	<hr />
</div>
	  
	  
	  <div class="content join-us clearfix">
	  	
	  	<div class="subnav-wrapper clerfix">
		<ul class="subnav clearfix">
		<li><a href="/orgs/OPPF" class="trans-02s active">Description <span class="trans-02s"></span></a></li>
		<li><a href="/orgs/OPPF/members" class="trans-02s">Members <span class="trans-02s"></span></a></li>
	  	  	</ul>
		<a  class="holobtn bt-join js-modal-orgs js-orgs-apply"   >
  <span class="holobtn-top abs-overlay trans-02s">Join us now!</span>
  <span class="holobtn-bottom abs-overlay trans-02s"></span>
</a>
</div>			
			<div class="frame top"></div>
	  	<div class="body markitup-text">
	  	<p>Recruitment is <span class="caps">OPEN</span>. All are welcome!</p>

<p><a href="https://operationpitchfork.com/" rel="nofollow"><strong><em>Website</em></strong></a> &#8211; <a href="https://discord.gg/0khMm8QaHUmR8btK" rel="nofollow"><strong><em>Voice Chat (Discord)</em></strong></a></p>

<p><a href="https://forums.robertsspaceindustries.com/discussion/60679/invading-vanduul-space-at-the-end-of-the-beta-operation-pitchfork/p1" rel="nofollow"><strong><em><span class="caps">RSI</span> Thread</em></strong></a></p>
	  	</div>
	  	<div class="frame bottom"></div>
	  	
	  	<hr />
	  </div>
	  
	  
	  
	  <div class="content block description">
	  	
	  	<div class="nav clearfix">
		  	<a href="#history" class="history active js-show-description-content" data-content_id="tab-history">
		  		<strong><span>History</span></strong>
		  		<span class="ico"></span>
		  	</a>
		  	<a href="#manifesto" class="manifesto js-show-description-content" data-content_id="tab-manifesto">
		  		<strong><span>Manifesto</span></strong>
		  		<span class="ico"></span>
		  	</a>
		  	<a href="#charter" class="charter js-show-description-content" data-content_id="tab-charter">
		  		<strong><span>Charter</span></strong>
		  		<span class="ico"></span>
		  	</a>
	  	</div>
	  	
	  	<hr class="pattern" />
	  	
	  	<div class="content-tab-wrapper">
	  		
		  	<div class="content-tab active" id="tab-history">
		  		<h2 class="tab-title">History</h2>
		  		<div class="markitup-text">
						<p>Hi,<br />
Org 1.5 has dropped giving us all the ability to be in multiple Orgs. As such we have opened the Operation Pitchfork Organization for recruiting. As you may know we have held it closed until now to prevent folks from having to choose between their home organization and Pitchfork. Now that this is no longer the case, the Operation Pitchfork organization’s goal is to help us better organize, tactically coordinate, and communicate.</p>


<p>I would ask if you have a home organization, that you keep that as your primary. We in no way want replace your current associations, only augment them. When applying it would help if you could include your home organization’s Spectrum ID along with your rank in stars (0 to 5) within that Org. We will only be setting ranks for people currently in an Org and this is only to maintain their home Org rank levels. It does not reflect authority within Operation Pitchfork.. </p>


<p>All that said Welcome Aboard!</p>


<p>For Operation Pitchfork<br />
sailor</p>

<p><a href="http://imperialnews.network/2015/02/inn-interview-sailor67-founder-operation-pitchfork/" rel="nofollow"><strong><em>An interview with Sailor67</em></strong></a> on the Imperial News Network (<span class="caps">INN</span>) that answers all the burning questions about Operation Pitchfork.</p>

<p><a href="https://forums.robertsspaceindustries.com/discussion/60679/invading-vanduul-space-at-the-end-of-the-beta-operation-pitchfork/p1" rel="nofollow"><strong><em><span class="caps">RSI</span> Forum Pitchfork Thread</em></strong></a></p>

<p><a href="https://docs.google.com/document/d/11z6I3WH9_1EwN6b3eAEio_RRXon6WlMa6iELrUaEGRQ/edit#heading=h.xu8scgstcdpm" rel="nofollow"><strong><em>Full Org Doc</em></strong></a></p>

<p><a href="https://docs.google.com/spreadsheet/ccc?key=0ArGbc93el3z8dGJvb2pFc2d4YUlSMnA2TU1OZGJyRkE&amp;usp=sharing#gid=0" rel="nofollow"><strong><em>Asset Roster</em></strong></a></p>

<p><a href="https://operationpitchfork.com/" rel="nofollow"><strong><em>Operation Pitchfork Website (Forums, Chat, Wiki)</em></strong></a></p>

<p><a href="https://www.facebook.com/groups/OperationPitchfork/" rel="nofollow"><strong><em>Operation Pitchfork Facebook Page</em></strong></a></p>

<p><a href="https://discord.gg/0khMm8QaHUmR8btK" rel="nofollow"><strong><em>Operation Pitchfork Voice Chat (Discord)</em></strong></a></p>
	        </div>
		  	</div>
		  	
	  		
		  	<div class="content-tab" id="tab-manifesto">
		  		<h2 class="tab-title">Manifesto</h2>
		  		<div class="markitup-text">
						<p>&#8220;On this day We, the Free and Independent Citizens of Humanity, declare our intention to carry out Operation Pitchfork, a coordinated strike against the Vanduul menace that has taken root along our border and which even now threatens to spread like a plague towards the very heart of Humankind: Our Homeworld, Earth. Fellow Humans, we must accept the truth: war with the Vanduul has already come. The first strike has already been made&#8230; and they are the ones who made it, at Orion! The goal of Operation Pitchfork is not genocide; let no one deceive you otherwise. What we intend to do is no more and no less than what the <strong><span class="caps">UEE</span></strong> in all its supposed might should have done: liberate Orion and avenge our dead. This is not a wanton act of senseless slaughter, it is a counterattack, and it will be carried out at the earliest possible opportunity.</p>

<p>The Vanduul have never made a single effort to negotiate with humanity; we have made several attempts to communicate with them peacefully and they slaughtered our envoys in reply. That they have established peaceful relations with the Banu is no evidence that they can be reasoned with. Indeed, all this fact proves is that there is no hope for diplomacy; if the Vanduul wished to coexist peacefully with us then they could have taken the peace that was offered, as they have with the Banu. Instead they chose war, and war we shall give them. The Vanduul are no different from the Tevarin in ages past, they are a threat which must be eliminated at any cost. If the destruction of a handful of Vanduul clans, those which have chosen to invade and occupy human territories and to slaughter human innocents, is all that it takes to secure peace then there need be no further bloodshed. If the remaining Vanduul choose instead the same course as the Tevarin before them, then we must be prepared to systematically eliminate their ability to do us harm by destroying or capturing every last spacefaring vessel they control. If the subjugation or eradication of the Vanduul race is the only way to secure peace, then that is a fate they choose for themselves.</p>

<p>We will not pretend to be motivated by any nobler cause than vengeance, but even if vengeance is not a noble cause, it is a just cause. Even if it is the blood of our slain families and friends that drives us to war, it is a war that must be fought. Even if the <span class="caps">UEE</span> refuses to act, action must be taken. Our symbol is the Pitchfork- it is not a spear, but we must use it as one. We will fight with whatever weapons we have, with whatever weapons we must, until we lie dead or Orion is free. If the government that claims to defend us will not do so, then we will defend ourselves. We have been pushed; we will push back. They have made us bleed; we will make them bleed. Should we fail, we hope that the <span class="caps">UEE</span> will take up our cause&#8230; else they will be forced to in due time. We must strike back at the Vanduul before they strike again.</p>

<p>The <span class="caps">UEE</span> claims that the cost of liberating the systems overrun by the Vanduul is not worth the gain- we say that the <span class="caps">UEE</span> is complacent and foolhardy. If Operation Pitchfork leads to all-out war, then all we have done is to accelerate the inevitable. The longer we delay, the bloodier the war will be. Let us not forget that the nearest Vanduul-held system is a mere two jumps from our very homeworld. Billions of human lives are at stake. We will not stand idly by while our enemies gather strength; we will not allow the Vanduul to reach Earth unless they go through each and every one of us first.</p>

<p>Join our cause and we will welcome you, no matter who you are or where you hail from, but be warned: make no attempt to get in our way. No mercy will be given to any who impede Operation Pitchfork, be they deluded fools who would appease the enemy, or be they the <strong><span class="caps">UEE</span></strong> Navy itself come to halt our vengeance in a misguided attempt to prevent the war we all know has already begun. If we must kill our own kind to reach the enemy, then so be it- the lives lost will be mourned, but should we back down then many more will surely perish in the next system the Vanduul invade. We will fight, and we will prevail, or we will die- and our children and our grandchildren will remember that we did what was necessary when no one else would, at the cost of our lives, at the cost of our honour, or at the cost of our very souls.&#8221; </p>

<p>-Anonymous 17 October 2943.</p>
					</div>
		  	</div>
		  	
	  		
		  	<div class="content-tab" id="tab-charter">
		  		<h2 class="tab-title">Charter</h2>
		  		<div class="markitup-text">
						<h1><strong>Operation Pitchfork &#8211; Suggested <span class="caps">SOP</span><sup class="footnote" id="fnrev2124596135b6bedc05712e-1"><a href="#fn2124596135b6bedc05712e-1">1</a></sup>.</strong></h1>

<h3>Rule 1: No mushroom management (i.e. Kept in the dark and feed excrement). Everyone knows what we are doing and why.</h3>

<h3>Rule 2: Don’t feed the trolls! If someone’s trolling, call it and flag it for the mods. You guys have made the <a href="https://forums.robertsspaceindustries.com/discussion/60679/invading-vanduul-space-at-the-end-of-the-beta-operation-pitchfork/p1" rel="nofollow" title="PF thread">PF thread</a> the most positive I have ever read. So now let’s do the same with our Orgs.</h3>

<h3>Rule 3: Execute Commander&#8217;s intent: If you see something that needs doing, do it, don’t wait on us. We have suggested the basic goals of the operation and have had no disagreement thus far. (Hint go back to <a href="https://forums.robertsspaceindustries.com/discussion/comment/1071721/#Comment_1071721" rel="nofollow" title="page 37">page 37</a> and read them if you get an opportunity and comment :-)). Our strategy should be based on our goals</h3>

<h3>Rule 4: We are doing this for the bloody fun of it so don’t make it hard work.</h3>

<h3>Rule 5: <a href="https://robertsspaceindustries.com/comm-link/spectrum-dispatch/12707-2681-Scorched-Earth" rel="nofollow" title="Vanduul">Vanduul</a> taste like <a href="https://www.google.com.au/search?q=bacon+pics&amp;tbm=isch&amp;tbo=u&amp;source=univ&amp;sa=X&amp;ei=9yrfUsLUBYiikQXS-YCQAg&amp;sqi=2&amp;ved=0CCkQsAQ&amp;biw=1280&amp;bih=876" rel="nofollow" title="Bacon">Bacon</a> ;)</h3>

<p class="footnote" id="fn2124596135b6bedc05712e-1"><sup>1</sup> Paraphrased from <a href="https://forums.robertsspaceindustries.com/discussion/comment/1080520/#Comment_1080520" rel="nofollow" title="Page 43">page 43</a> the <a href="https://forums.robertsspaceindustries.com/discussion/60679/invading-vanduul-space-at-the-end-of-the-beta-operation-pitchfork/p1" rel="nofollow" title="PF Thread">Operation Pitchfork thread</a> by Sailor67</p>
					</div>
		  	</div>
	  	</div>
	  </div>

            <hr/>
	  <div class="content block cover">
      <img src="/media/dwff62av86lnyr/cover/OPPF-Cover.jpg"/>
    </div>
    <div class="clear"></div>
    
    
        <hr/>
	  <div class="content block youtube">
      <div class="embed-container">
      <iframe id="ytplayer" class="org-youtube-embed" type="text/html" width="640" height="360" src="//www.youtube.com/embed/5MW2dCzfwQ0" frameborder="0" allowfullscreen="1"></iframe>
      </div>
      <div class="clear"></div>
    </div>
	   
	  
	</div>
  <div class="report"><a class="trans-02s trans-color js-modal-login">FLAG THIS PAGE</a></div>	</div>
</div>


    </div>

    
  </div>

  


<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment-with-locales.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.11/moment-timezone-with-data.min.js"></script>

<script type="text/javascript">
  $(window).load(function(){
      $.cookie('moment_timezone', moment.tz.guess(), { expires: 31, path: '/' });
  });
</script>



       
        <script id="tpl_number_counter_digits" type="text/x-jsmart-tmpl">{if !$seperator}{$seperator=','}{/if}
{if !$first_max}{$first_max=9}{/if}
{for $digit = 0 to $length-1}
  <div class="mask">
    <div class="carousel">
      {if $digit == 0}
        {$max = $first_max}
      {else}
        {$max = 9}
      {/if}
      {for $i=0 to $max}
        <div class="item {if $val_arr[$digit] == $i}on{/if}" rel="{$i}">{$i}</div>
      {/for}
    </div>
  </div>
  {if ($length - $digit) % 3 == 1 && $digit != $length-1}
  <div class="seperator">{$seperator}</div>
  {/if}
{/for}</script>
<script id="base_modal" type="text/x-jsmart-tmpl"><div class="modal-wrapper {block name="modal_wrapper_class"}{/block}">
  <div class="top-border">
    {block name="modal_lines"}
    <img src="/rsi/static/images/modal_blue_line.png" />
    {/block}
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
  </div>
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    {block name="modal_content"}{/block}
    {block name="modal_footer"}{/block}
  </div>
  <div class="bottom-border">
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
    {block name="modal_lines"}
    <img src="/rsi/static/images/modal_blue_line.png" />
    {/block}
  </div>
</div></script>
<script id="base_modal_flat" type="text/x-jsmart-tmpl"><div class="modal-wrapper {block name="modal_wrapper_class"}{/block}">
  
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    {block name="modal_content"}{/block}
    {block name="modal_footer"}{/block}
  </div>
  
</div></script>
<script id="tpl_modals_slideshow" type="text/x-jsmart-tmpl"><img class="top-border" src="/rsi/static/images/modal_top.png">
<a href="" class="close js-close"></a>
<div class="mask">
  <a class="js-prev prev control"></a>
  <a class="js-next next control"></a>
  <div class="slideshow-carousel carousel" rel="{$index}">
    {foreach from=$images item="image"}
      <div class="{if $index == $image@index}on{/if}">
      {if $image.is_video}
        <div class="video-holder">
          <div id="slideshow_video_{$image@index}" data-source="{$image->source_url}">
            <video width="100%" height="100%" preload="auto" {if $video}src="{$image->source_url}"{/if} controls></video>
          </div>
        </div>
      {else}
        <div class="media js-media-slideshow-{$image@iteration}">
        {if $image.low_res}
          <picture>
            <!--[if IE 9]><video style="display: none;"><![endif]-->
            <source data-srcset="{$image.full_res}" media="(min-width: 300px)" />
            <!--[if IE 9]></video><![endif]-->
            <img data-srcset="{$image.low_res}" alt="{$image.title}" />
          </picture>
        {else}
          <img data-src="{$image.source_url}" />
        {/if}
        </div>
      {/if}
        <div class="text">
          {if !$image.is_video}
          <a href="{$image.source_url}" class="download"></a>
          {/if}
          <div class="copyright">© 2012-{$year}<br />Cloud Imperium Games Corporation &<br />Roberts Space Industries Corp.</div>
          <div class="page-number">{$image@iteration} / {count($images)}</div>
          <div class="caption v-center">{if $image.title && $image.title != "undefined"}{$image.title}{/if}</div>
          <div class="cboth"></div>
        </div>
      </div>
    {/foreach}
  </div>
</div>
<img class="bottom-border" src="/rsi/static/images/modal_bottom.png"></script>
<script id="tpl_contact_us" type="text/x-jsmart-tmpl"><div class="modal-wrapper ">
  <div class="top-border">
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
  </div>
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    
<div id="contact" class="inner-content on">
  <h2><span class="icon"></span>CONTACT</h2>
  <div class="padder">
    <div class="separator"></div>
    <form name="" action="" method="POST">
  <div class="error-message js-error-message"></div>
  <div class="success-message js-success-message"></div>
    <fieldset class="last">
    <label for="contact_email">Email Address</label>
    <input type="text" name="email" value="" class="trans-02s trans-color trans-box-shadow" id="contact_email" />
  </fieldset>
    <fieldset>
    <label for="contact_subject">Subject</label>
    <input type="text" name="subject" value="" class="trans-02s trans-color trans-box-shadow" id="contact_subject" />
    <label>Contacting us for:</label>
    <ul class="category-info">
            <li id="tech_support_info">Questions about download, installation, networking, or in-game client problems</li>
            <li id="subscription_info">Questions about monthly and yearly subscription plans</li>
            <li id="account_billing_info">Issues related to your account, such as incorrect information or ability to access account, or Billing with regards to payments and payment methods</li>
            <li id="melt_request_info">To reclaim a pledge over $1,000 for store credit (please note - this is a permanent action)</li>
            <li id="merchandise_info">Questions about physical and/or shipped merchandise</li>
            <li id="hacked_info">Issues related to compromised account or missing pledge.</li>
            <li id="account_recovery_info">For issues with account authentication, lost passwords and related queries</li>
            <li id="probation_info">Issues related to forums probation or ban</li>
            <li id="refund_request_info">Refund requests and related inquiries</li>
            <li id="customer_support_info">For general questions and queries regarding Star Citizen</li>
          </ul>
  </fieldset>
  <fieldset>
    <label for="contact_text">Your text here</label>
    <textarea name="text" class="trans-02s trans-color trans-box-shadow" id="contact_text"></textarea>
  </fieldset>
  <div class="contact-submit-wrapper">
    <div class="line"></div>
    <button class="submit js-submit"><strong>submit your message</strong></button>
  </div>
</form>
    <div class="separator"></div>
  </div>
</div>

    
  </div>
  <div class="bottom-border">
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
  </div>
</div></script>
<script id="tpl_concierge" type="text/x-jsmart-tmpl"><div class="modal-wrapper ">
  <div class="top-border">
    
<img src="/rsi/static/images/modal_yellow_line.png" />

    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
  </div>
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    
<div id="contact" class="inner-content on">
  <h2><span class="icon"></span>CONCIERGE</h2>
  <div class="padder">
    <div class="separator"></div>
    <form name="" action="" method="POST">
      <p class="head">We recommend that you check out the <a href="/faq">FAQs</a> and other resources below if you are in need of information regarding RSI or Star Citizen. If your topic isn’t covered, feel free to contact us!<br/><br/> - Gameplay : <a href="https://forums.robertsspaceindustries.com/categories/ask-a-developer">Ask A Dev</a><br/> - Suggestions: <a href="https://forums.robertsspaceindustries.com/categories/game-ideas">Game Ideas</a><br/> - Bug Reports (including PTU): <a href="https://forums.robertsspaceindustries.com/categories/test-pilot-headquarters">Test Pilot Headquarters</a><br/></p>
      <div class="error-message js-error-message"></div>
      <div class="success-message js-success-message"></div>
      <fieldset>
        <label for="concierge_subject">Subject</label>
        <span class="corner-wrapper">
          <input type="text" name="subject" value="" class="trans-02s trans-color trans-box-shadow" id="concierge_subject" />
          <span class="corner corner-top-left"></span>
          <span class="corner corner-top-right"></span>
          <span class="corner corner-bottom-left"></span>
          <span class="corner corner-bottom-right"></span>
        </span>
        <label>Contacting us for:</label>
      </fieldset>
      <fieldset>
        <label for="concierge_text">Your text here</label>
        <span class="corner-wrapper">
          <textarea name="text" class="trans-02s trans-color trans-box-shadow" id="concierge_text"></textarea>
          <span class="corner corner-top-left"></span>
          <span class="corner corner-top-right"></span>
          <span class="corner corner-bottom-left"></span>
          <span class="corner corner-bottom-right"></span>
        </span>
      </fieldset>
      <fieldset class="clearfix last">
        <span class="submit-wrapper">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="submit" value="Submit" class="trans-02s trans-color trans-background" />
        </span>
      </fieldset>
    </form>
    <div class="separator"></div>
  </div>
</div>

    
  </div>
  <div class="bottom-border">
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
    
<img src="/rsi/static/images/modal_yellow_line.png" />

  </div>
</div></script>
<script id="tpl_error" type="text/x-jsmart-tmpl"><div class="modal-error js-modal-error">
  <p class="modal-text js-modal-text"></p>
  <a class="close js-close trans-03s .trans-opacity" href=""></a>
</div></script>
<script id="tpl_success" type="text/x-jsmart-tmpl"><div class="modal-success js-modal-success">
  <p class="modal-text js-modal-text"></p>
  <a class="close js-close trans-03s .trans-opacity" href=""></a>
</div></script>
<script id="tpl_progress" type="text/x-jsmart-tmpl"><div class="modal-progress js-modal-progress">
  <div class="traj-loader">
    <div class="fast-blink"></div>
    <span class="modal-text js-modal-text"></span>
  </div>
</div></script>
<script id="tpl_outbound" type="text/x-jsmart-tmpl"><div class="modal-wrapper ">
  <div class="top-border">
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
  </div>
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    
<div id="outbound" class="inner-content on">
  <h2><span class="icon"></span>OUTBOUND LINK</h2>
  <div class="padder">
    <div class="separator"></div>
    <form name="" action="" method="POST">
      <div class="error-message js-error-message"> <span class=important>WARNING</span><br/><br/> This link will bring you outside of the RSI site and into the depths of the internet. Continue?<br/><br/><span class="url"></span> </div>
      <div class="success-message js-success-message"><span class=important>STAND BY</span><br/><br/> Initiating hyperlink.<br/><br/></div>

      <fieldset class="clearfix last">
        <span class="submit-wrapper">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="submit" value="WARP" class="trans-02s trans-color trans-background" />
        </span>
      </fieldset>
    </form>
    <div class="separator"></div>
  </div>
</div>

    
  </div>
  <div class="bottom-border">
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
  </div>
</div></script>

<script id="tpl_l-notification-bar" type="text/x-jsmart-tmpl"><div class="l-notification-bar js-notification-bar">

  <div class="l-notification-bar__watermark js-svg-inliner h-svg__logo-star-citizen"></div>

  <div class="l-notification-bar__boxes">
    {if !$viewedCookieNotif}
      <div class="l-notification-bar__box">
        {include file='tpl_c-notification'
          type='cookie'
          title='COOKIES:'
          message="Our website uses Google Analytics to analyze our traffic. <br/>To learn how you can control Google's use of your data and how you can opt out <a href='https://www.google.com/policies/privacy/partners/'>click here</a>."
          linkText='See Details'
          buttonText='Got it!'}
      </div>
    {/if}

    {if !$viewedPrivacyNotif}
      <div class="l-notification-bar__box">
        {include file='tpl_c-notification'
          type='privacy'
          title='PRIVACY POLICY:'
          message='We adjusted the PP to reflect the decision of the European Court of Justice regarding Safe Harbor, the fact that RSI has moved and added some services providers.'
          linkText='View Privacy Policy'
          buttonText='Got it!'}
      </div>
    {/if}
  </div>

</div>
</script>
<script id="tpl_c-notification" type="text/x-jsmart-tmpl"><div class="c-notification js-bottom-notif-msg-{$type}">
    <div class="c-notification__title">{$title}</div>
    <div class="c-notification__message">
      {$message}
    </div>

    {if $linkText}
        <div class="c-notification__wrapper-link">
            <a class="c-notification__link js-bottom-notif-link-{$type}">
            {$linkText}
            </a>
        </div>
    {/if}

    <a class="c-notification__button js-bottom-notif-btn-{$type}">

      <span class="c-notification__button-text">
       {$buttonText}
      </span>

      {if $type neq 'announcement'}
        <div class="c-iconed__icon c-iconed__icon--checkmark"></div>
      {/if}
    </a>
</div>
</script>

<script id="tpl_confirm" type="text/x-jsmart-tmpl"><div class="modal-confirm js-modal-confirm clearfix">
  <p class="modal-text js-modal-text"></p>
  <a class="bt-close js-close trans-03s trans-opacity" href=""></a>
  <a class="bt-confirm js-confirm trans-03s trans-opacity" href=""></a>
	<div class="buttons">
		<a class="shadow-button trans-02s trans-color js-close bt-close rm"     >
  <span class="label js-label trans-02s">Cancel</span>
  <span class="icon trans-02s"><span class="effect trans-opacity trans-03s"></span></span>
  <span class="left-section"></span>
  <span class="right-section"></span>
</a>
		<a class="shadow-button trans-02s trans-color js-confirm bt-confirm green"     >
  <span class="label js-label trans-02s">Confirm</span>
  <span class="icon trans-02s"><span class="effect trans-opacity trans-03s"></span></span>
  <span class="left-section"></span>
  <span class="right-section"></span>
</a>
	</div>
</div>
</script>
<script id="tpl_alert" type="text/x-jsmart-tmpl"><div class="modal-alert js-modal-alert clearfix">
  <p class="modal-text js-modal-text"></p>
  <div class="buttons">
    <a class="shadow-button trans-02s trans-color js-confirm bt-confirm green"     >
  <span class="label js-label trans-02s">OK</span>
  <span class="icon trans-02s"><span class="effect trans-opacity trans-03s"></span></span>
  <span class="left-section"></span>
  <span class="right-section"></span>
</a>
  </div>
</div></script>
<script id="tpl_video" type="text/x-jsmart-tmpl">{extends file="base_modal"}
{block name='modal_content'}
<div id="ship-commercial" class="inner-content">
  
  <div class="hr"></div>
  <div class="content-block4">
   
    <div class="bottom"></div>
  </div>
  {if $distant_source=="vimeo"}
  <iframe id="commercial" src="//player.vimeo.com/video/{$video_id}?wmode=transparent" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
  {else}
  <iframe id="commercial" frameborder="0" allowfullscreen="1" title="YouTube video player" width="100%" height="100%" src="https://www.youtube.com/embed/{$video_id}?autoplay=1"></iframe>
  {/if}
</div>
{/block}
</script>
      
  <script id="tpl_orgs_dissolve" type="text/x-jsmart-tmpl">{extends file="base_modal"}
{block name='modal_content'}
<div id="orgs-dissolve" class="inner-content">
  <h2><span class="icon"></span>DISSOLVE ORGANIZATION</h2>
  <div class="padder">
    <div class="separator"></div>
    <div class="clearfix">
      <form name="org-dissolve" action="" method="POST">
        <div class="error-message js-error-message"></div>
        <div class="success-message js-success-message"></div>
        <p class="head">You are about to dissolve <strong>{$org.name} &lt;{$org.sid}&gt;</strong>. This will <span class="important">delete</span> the organization from UEE records, remove all members from the roster and log the dissolution in history.</p>

    <div class="warn-panel">
      <div class="exagon">
        <div class="hand"></div>
        <span>ATTENTION</span>
      </div>
      <div class="skull"></div>
    </div>

    <div class="panes">
        <div class="pane step1">
        <p>This action is <span class="important">irreversible</span>. Once the records for this organization SID have been expunged they will no longer be active in the databanks. If you still wish to continue, please press NEXT to confirm your credentials.</p>

        <div class="pane-controls">
          <img class="warn-logo" src="/rsi/static/images/uee-small-trans.png"/>
          <span class="submit-wrapper js-next right disabled">
            <span class="submit-hover trans-02s trans-opacity"></span>
            <input type="submit" value="NEXT" class="trans-02s trans-color trans-background" />
          </span>
        </div>
      </div>

      <div class="pane step2">
        <p class="warning">WARNING! This action is PERMANENT and cannot be undone.</p>

        <p>Type in your password to confirm:</p>
        <span class="corner-wrapper">
          <input type="password" name="current_password" value="" class="trans-02s trans-color trans-box-shadow" />
          <span class="corner corner-top-left"></span>
          <span class="corner corner-top-right"></span>
          <span class="corner corner-bottom-left"></span>
          <span class="corner corner-bottom-right"></span>
        </span>

        {* btn submit *}
        <span class="submit-wrapper js-back back left active">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="submit" value="BACK" class="trans-02s trans-color trans-background" />
        </span>
        <span class="submit-wrapper js-submit right disabled">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="hidden" name="pledge_id" value="{$item_id}" class="js-form-data" />
          <input type="submit" value="DISSOLVE" class="trans-02s trans-color trans-background" />
        </span>
     </div>

      </form>
    </div>
  </div>
    <div class="separator"></div>
  </div>
</div>
{/block}




</script>
  <script id="tpl_orgs_concede" type="text/x-jsmart-tmpl">{extends file="base_modal"}
{block name='modal_content'}
<div id="orgs-concede" class="inner-content">
  <h2><span class="icon"></span>CONCEDE ORGANIZATION</h2>
  <div class="padder">
    <div class="separator"></div>
    <div class="clearfix">
      <form name="orgs-condede" action="" method="POST">
        <div class="error-message js-error-message"></div>
        <div class="success-message js-success-message"></div>
        <p class="head">You are about to concede <strong>{$org.name} [ {$org.sid} ]</strong>. This will <span class="important">transfer leadership</span> to the designated member. You will lose all leadership privileges in the process.</p>

     <div class="pane-selection">
        <p class="heading">Transfer leadership to:</p>
        <p class="selected-member js-selected-member member"></p>
        <div class="clear"></div>
     </div>


    <div class="panes">
        <div class="pane step1">
        <p>Please <span class="important">select</span> the member you wish to transfer to:</p>
        <div class="search-bar">
        <input type="text" name="member_search" value=""/>
        <a class='search-button shadow-button trans-02s trans-color'>
          <span class="label js-label trans-02s">Search</span>
          <span class="icon trans-02s"><span class="effect trans-opacity trans-03s"></span></span>
          <span class="left-section"></span> 
          <span class="right-section"></span> 
        </a>
        </div>

        <div class="scrollable fancy">
          <div class="viewport">
            <div class="content">
              <div class="traj-loader">
                <div class="fast-blink"></div>
                <span>Searching members</span>
              </div>
              <div class="member-rows"> </div>
            </div>
          </div>
        </div>

        <span class="submit-wrapper js-next right">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="submit" value="NEXT" class="trans-02s trans-color trans-background" />
        </span>
        <div class="clear"></div>
      </div>

      <div class="pane step2">
        <p class="warning">WARNING! This action is PERMANENT and cannot be undone.</p>

        <p>Type in your password to confirm:</p>
        <span class="corner-wrapper">
          <input type="password" name="current_password" value="" class="trans-02s trans-color trans-box-shadow" />
          <span class="corner corner-top-left"></span>
          <span class="corner corner-top-right"></span>
          <span class="corner corner-bottom-left"></span>
          <span class="corner corner-bottom-right"></span>
        </span>

        {* btn submit *}
        <span class="submit-wrapper js-back back left active">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="submit" value="BACK" class="trans-02s trans-color trans-background" />
        </span>
        <span class="submit-wrapper js-submit right disabled">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="submit" value="APPLY" class="trans-02s trans-color trans-background" />
        </span>
     </div>

      </form>
    </div>
  </div>
    <div class="separator"></div>
  </div>
</div>
{/block}




</script>
  <script id="tpl_orgs_expel" type="text/x-jsmart-tmpl">{extends file="base_modal"}
{block name='modal_content'}
<div id="orgs-expel" class="inner-content">
  <h2><span class="icon"></span>EXPEL MEMBER</h2>
  <div class="padder">
    <div class="separator"></div>
    <div class="clearfix">
      <form name="orgs-expel" action="" method="POST">
        <div class="error-message js-error-message"></div>
        <div class="success-message js-success-message"></div>
        <p class="head">Your are about to expel <strong>{$member.nickname}</strong> from <strong>{$org.name}</strong>. </p>

        <div class="pane-selection">
         <p class="heading">Expel the following member:</p>
         <div class="selected-member js-selected-member member">
           <div class="avatar-wrapper">
             <img src="{if $member.avatar}{$member.avatar}{else}/rsi/static/images/account/avatar_default.jpg{/if}"/>
           </div>
           <div class="name-wrapper">
             <span class="displayname">{$member.displayname}</span>
             <span class="nickname">{$member.nickname}</span>
           </div>
         </div>
         <div class="clear"></div>
        </div>

        <p>Please provide a reason for expulsion. The reason will be displayed in the history logs and sent to the member.</p>
        <textarea name="reason"></textarea>

        {* btn submit *}
        <span class="submit-wrapper js-submit right">
          <span class="submit-hover trans-02s trans-opacity"></span>
          <input type="hidden" name="pledge_id" value="{$item_id}" class="js-form-data" />
          <input type="submit" value="EXPEL" class="trans-02s trans-color trans-background" />
        </span>
      </form>
    </div>
    <div class="separator"></div>
  </div>
</div>
{/block}
</script>
  <script id="tpl_orgs_member_results" type="text/x-jsmart-tmpl">{foreach $members as $member}
<div class="row">
   <label for="upgrade-radio-{$member.id}" class="member">
     <input id="upgrade-radio-{$member.id}" name="member_id" type="radio" value="{$member.id}"/>
     <div class="avatar-wrapper">
     {if $member.account.avatar}
     <img src="{$member.account.avatar}"/>
     {else}
     <img src="/rsi/static/images/account/avatar_default.jpg"/>
     {/if}
     </div>
     <div class="name-wrapper">
     <span class="displayname">{$member.account.displayname}</span>
     <span class="nickname">{$member.account.nickname}</span>
     </div>
     <div class="rank-wrapper">
       {$member.rank_name}
       {$r = $member.rank.level}
       {if !$r}{$r = 0}{/if}
       <span class="ranking-stars" style="width: {$r * 14}px;"><span class="stars"></span></span>
     </div>
   </label>
</div>
{foreachelse}
<span class="important">{translate token="org_members_nomatch"}</span>
{/foreach}
</script>
	<script id="tpl_textile_reference" type="text/x-jsmart-tmpl">{extends file="base_modal"}
{block name='modal_content'}
<div id="textile-reference" class="inner-content on">
    <h2><span class="icon"></span>Textile Quick Reference</h2>
  <div class="padder">
    <div class="separator"></div>
    <div class="scrollable fancy">
      <div class="viewport">
        <div class="content">
          <div class="markitup-text">
					<table>
					<tr><th colspan='5'>Writing in Textile<br><br></th></tr>
					<tr><td class='example1'><pre>A single paragraph.<br /><br />Followed by another.</pre></td><td>&rarr;</td><td class='example2'><p>A single paragraph.</p>

						<p>Followed by another.</p></td></tr>
					<tr><td class='example1'><pre>I am &lt;b&gt;very&lt;/b&gt; serious.<br /><br />&lt;pre&gt;<br />  I am &lt;b&gt;very&lt;/b&gt; serious.<br />&lt;/pre&gt;</pre></td><td>&rarr;</td><td class='example2'><p>I am <b>very</b> serious.</p>


					<pre>
					  I am &lt;b&gt;very&lt;/b&gt; serious.
					</pre></td></tr>
					<tr><td class='example1'><pre>I spoke.<br />And none replied.</pre></td><td>&rarr;</td><td class='example2'><p>I spoke.
					And none replied.</p></td></tr>
					<tr><td class='example1'><pre>"Observe!"</pre></td><td>&rarr;</td><td class='example2'><p>&#8220;Observe!&#8221;</p></td></tr>
					<tr><td class='example1'><pre>Observe -- very nice!</pre></td><td>&rarr;</td><td class='example2'><p>Observe&#8212;very nice!</p></td></tr>
					<tr><td class='example1'><pre>Observe - tiny and brief.</pre></td><td>&rarr;</td><td class='example2'><p>Observe &#8211; tiny and brief.</p></td></tr>
					<tr><td class='example1'><pre>Observe...</pre></td><td>&rarr;</td><td class='example2'><p>Observe&#8230;</p></td></tr>
					<tr><td class='example1'><pre>Observe: 2 x 2.</pre></td><td>&rarr;</td><td class='example2'><p>Observe: 2&#215;2.</p></td></tr>
					<tr><td class='example1'><pre>one(TM), two(R), three(C).</pre></td><td>&rarr;</td><td class='example2'><p>one&#8482;, two&#174;, three&#169;.</p></td></tr>
					
          <tr><th colspan='5'>Quick Block Modifiers</th></tr>
					<tr><td class='example1'><pre>h1. Header 1</pre></td><td>&rarr;</td><td class='example2'><h1>Header 1</h1></td></tr>
					<tr><td class='example1'><pre>h2. Header 2</pre></td><td>&rarr;</td><td class='example2'><h2>Header 2</h2></td></tr>
					<tr><td class='example1'><pre>h3. Header 3</pre></td><td>&rarr;</td><td class='example2'><h3>Header 3</h3></td></tr>
					<tr><td class='example1'><pre>An old text<br /><br />bq. A block quotation.<br /><br />Any old text</pre></td><td>&rarr;</td><td class='example2'><p>An old text</p>

						<blockquote>
							<p>A block quotation.</p>
						</blockquote>

						<p>Any old text</p></td></tr>
					<tr><td class='example1'><pre>This is covered elsewhere[1].</pre></td><td>&rarr;</td><td class='example2'><p>This is covered elsewhere<sup><a href="#fn1">1</a></sup>.</p></td></tr>
					<tr><td class='example1'><pre>fn1. Down here, in fact.</pre></td><td>&rarr;</td><td class='example2'><p id="fn1"><sup>1</sup> Down here, in fact.</p></td></tr>
					
          <tr><th colspan='5'>Quick Phrase Modifiers</th></tr>
					<tr><td class='example1'><pre>I _believe_ every word.</pre></td><td>&rarr;</td><td class='example2'><p>I <em>believe</em> every word.</p></td></tr>
					<tr><td class='example1'><pre>And then? She *fell*!</pre></td><td>&rarr;</td><td class='example2'><p>And then? She <strong>fell</strong>!</p></td></tr>
					<tr><td class='example1'><pre>I __know__.<br />I **really** __know__.</pre></td><td>&rarr;</td><td class='example2'><p>I <i>know</i>.
					I <b>really</b> <i>know</i>.</p></td></tr>
					<tr><td class='example1'><pre>??Cat's Cradle?? by Vonnegut</pre></td><td>&rarr;</td><td class='example2'><p><cite>Cat&#8217;s Cradle</cite> by Vonnegut</p></td></tr>
					<tr><td class='example1'><pre>Convert with @r.to_html@</pre></td><td>&rarr;</td><td class='example2'><p>Convert with <code>r.to_html</code></p></td></tr>
					<tr><td class='example1'><pre>I'm -sure- not sure.</pre></td><td>&rarr;</td><td class='example2'><p>I&#8217;m <del>sure</del> not sure.</p></td></tr>
					<tr><td class='example1'><pre>You are a +pleasant+ child.</pre></td><td>&rarr;</td><td class='example2'><p>You are a <ins>pleasant</ins> child.</p></td></tr>
					<tr><td class='example1'><pre>a ^2^ + b ^2^ = c ^2^</pre></td><td>&rarr;</td><td class='example2'><p>a <sup>2</sup> + b <sup>2</sup> = c <sup>2</sup></p></td></tr>
					<tr><td class='example1'><pre>log ~2~ x</pre></td><td>&rarr;</td><td class='example2'><p>log <sub>2</sub> x</p></td></tr>
					<tr><td class='example1'><pre>I'm %unaware% of most soft drinks.</pre></td><td>&rarr;</td><td class='example2'><p>I&#8217;m <span>unaware</span> of most soft drinks.</p></td></tr>
					<tr><td class='example1'><pre>I'm %{color:red}unaware%<br />of most soft drinks.</pre></td><td>&rarr;</td><td class='example2'><p>I&#8217;m <span style="color:red;">unaware</span>
					of most soft drinks.</p></td></tr>
					
          <tr><th colspan='5'>Attributes</th></tr>
					<tr><td class='example1'><pre>p&lt;. align left</pre></td><td>&rarr;</td><td class='example2'><p style="text-align:left;">align left</p></td></tr>
					<tr><td class='example1'><pre>p&gt;. align right</pre></td><td>&rarr;</td><td class='example2'><p style="text-align:right;">align right</p></td></tr>
					<tr><td class='example1'><pre>p=. centered</pre></td><td>&rarr;</td><td class='example2'><p style="text-align:center;">centered</p></td></tr>
					<tr><td class='example1'><pre>p&lt;&gt;. justified</pre></td><td>&rarr;</td><td class='example2'><p style="text-align:justify;">justified</p></td></tr>
					<tr><td class='example1'><pre>p(. left ident 1em</pre></td><td>&rarr;</td><td class='example2'><p style="padding-left:1em;">left ident 1em</p></td></tr>
					<tr><td class='example1'><pre>p((. left ident 2em</pre></td><td>&rarr;</td><td class='example2'><p style="padding-left:2em;">left ident 2em</p></td></tr>
					<tr><td class='example1'><pre>p))). right ident 3em</pre></td><td>&rarr;</td><td class='example2'><p style="padding-right:3em;">right ident 3em</p></td></tr>
					<tr><td class='example1'><pre>&lt;pre&gt;<br />&lt;code&gt;<br />  a.gsub!( /&lt;/, '' )<br />&lt;/code&gt;<br />&lt;/pre&gt;<br /></pre></td><td>&rarr;</td><td class='example2'><pre>
					<code>
					  a.gsub!( /&lt;/, '' )
					</code>
					</pre></td></tr>

					<tr><th colspan='5'>Lists</th></tr>
					<tr><td class='example1'><pre># A first item<br /># A second item<br /># A third</pre></td><td>&rarr;</td><td class='example2'><ol>
						<li>A first item</li>
							<li>A second item</li>
							<li>A third</li>
						</ol></td></tr>
					<tr><td class='example1'><pre># Fuel could be:<br />## Coal<br />## Gasoline<br />## Electricity<br /># Humans need only:<br />## Water<br />## Protein</pre></td><td>&rarr;</td><td class='example2'><ol>
						<li>Fuel could be:
						<ol>
						<li>Coal</li>
							<li>Gasoline</li>
							<li>Electricity</li>
						</ol>
						</li>
							<li>Humans need only:
						<ol>
						<li>Water</li>
							<li>Protein</li>
						</ol></li>
						</ol></td></tr>
					<tr><td class='example1'><pre>* A first item<br />* A second item<br />* A third</pre></td><td>&rarr;</td><td class='example2'><ul>
						<li>A first item</li>
							<li>A second item</li>
							<li>A third</li>
						</ul></td></tr>
					<tr><td class='example1'><pre>* Fuel could be:<br />** Coal<br />** Gasoline<br />** Electricity<br />* Humans need only:<br />** Water<br />** Protein</pre></td><td>&rarr;</td><td class='example2'><ul>
						<li>Fuel could be:
						<ul>
						<li>Coal</li>
							<li>Gasoline</li>
							<li>Electricity</li>
						</ul>
						</li>
							<li>Humans need only:
						<ul>
						<li>Water</li>
							<li>Protein</li>
						</ul></li>
						</ul></td></tr>
					
          <tr><th colspan='5'>External References</th></tr>
					<tr><td class='example1'><pre>I searched "Google":http://google.com.</pre></td><td>&rarr;</td><td class='example2'><p>I searched <a href="http://google.com">Google</a>.</p></td></tr>
					<tr><td class='example1'><pre>I am crazy about "Hobix":hobix<br />and "it's":hobix "all":hobix I ever<br />"link to":hobix!<br /><br />[hobix]http://hobix.com<br /></pre></td><td>&rarr;</td><td class='example2'><p>I am crazy about <a href="http://hobix.com">Hobix</a>
					and <a href="http://hobix.com">it&#8217;s</a> <a href="http://hobix.com">all</a> I ever
					<a href="http://hobix.com">link to</a>!</p></td></tr>
					
					<tr><th colspan='5'>Tables</th></tr>
					<tr><td class='example1'><pre>| name | age | sex |<br />| joan | 24 | f |<br />| archie | 29 | m |<br />| bella | 45 | f |</pre></td><td>&rarr;</td><td class='example2'><table>
							<tr>
								<td> name </td>
								<td> age </td>
								<td> sex </td>
							</tr>
							<tr>
								<td> joan </td>
								<td> 24 </td>
								<td> f </td>
							</tr>
							<tr>
								<td> archie </td>
								<td> 29 </td>
								<td> m </td>
							</tr>
							<tr>
								<td> bella </td>
								<td> 45 </td>
								<td> f </td>
							</tr>
						</table></td></tr>
					<tr><td class='example1'><pre>|_. name |_. age |_. sex |<br />| joan | 24 | f |<br />| archie | 29 | m |<br />| bella | 45 | f |</pre></td><td>&rarr;</td><td class='example2'><table>
							<tr>
								<th>name </th>
								<th>age </th>
								<th>sex </th>
							</tr>
							<tr>
								<td> joan </td>
								<td> 24 </td>
								<td> f </td>
							</tr>
							<tr>
								<td> archie </td>
								<td> 29 </td>
								<td> m </td>
							</tr>
							<tr>
								<td> bella </td>
								<td> 45 </td>
								<td> f </td>
							</tr>
						</table></td></tr>
					<tr><td class='example1'><pre>|_. attribute list |<br />|&lt;. align left |<br />|&gt;. align right|<br />|=. center |<br />|&lt;&gt;. justify |<br />|^. valign top |<br />|~. bottom |</pre></td><td>&rarr;</td><td class='example2'><table>
							<tr>
								<th>attribute list </th>
							</tr>
							<tr>
								<td style="text-align:left;">align left </td>
							</tr>
							<tr>
								<td style="text-align:right;">align right</td>
							</tr>
							<tr>
								<td style="text-align:center;">center </td>
							</tr>
							<tr>
								<td style="text-align:justify;">justify </td>
							</tr>
							<tr>
								<td style="vertical-align:top;">valign top </td>
							</tr>
							<tr>
								<td style="vertical-align:bottom;">bottom </td>
							</tr>
						</table></td></tr>
					<tr><td class='example1'><pre>|\2. spans two cols |<br />| col 1 | col 2 |</pre></td><td>&rarr;</td><td class='example2'><table>
							<tr>
								<td colspan="2">spans two cols </td>
							</tr>
							<tr>
								<td> col 1 </td>
								<td> col 2 </td>
							</tr>
						</table></td></tr>
					<tr><td class='example1'><pre>|/3. spans 3 rows | a |<br />| b |<br />| c |</pre></td><td>&rarr;</td><td class='example2'><table>
							<tr>
								<td rowspan="3">spans 3 rows </td>
								<td> a </td>
							</tr>
							<tr>
								<td> b </td>
							</tr>
							<tr>
								<td> c </td>
							</tr>
						</table></td></tr>
					<tr><td class='example1'><pre>|{background:#ddd}. Grey cell|</pre></td><td>&rarr;</td><td class='example2'><table>
							<tr>
								<td style="background:#ddd;">Grey cell</td>
							</tr>
						</table></td></tr>
					<tr><td class='example1'><pre>table{border:1px solid black}.<br />|This|is|a|row|<br />|This|is|a|row|</pre></td><td>&rarr;</td><td class='example2'><table style="border:1px solid black;">
							<tr>
								<td>This</td>
								<td>is</td>
								<td>a</td>
								<td>row</td>
							</tr>
							<tr>
								<td>This</td>
								<td>is</td>
								<td>a</td>
								<td>row</td>
							</tr>
						</table></td></tr>
					<tr><td class='example1'><pre>|This|is|a|row|<br />{background:#ddd}. |This|is|grey|row|</pre></td><td>&rarr;</td><td class='example2'><table>
							<tr>
								<td>This</td>
								<td>is</td>
								<td>a</td>
								<td>row</td>
							</tr>
							<tr style="background:#ddd;">
								<td>This</td>
								<td>is</td>
								<td>grey</td>
								<td>row</td>
							</tr>
						</table></td></tr>
					</table>
					</div>
					
        </div>
      </div>
    </div>
    <div class="separator"></div>
  </div>
</div>
{/block}
</script>
  <script id="tpl_orgs_report" type="text/x-jsmart-tmpl"><div class="modal-wrapper ">
  <div class="top-border">
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
  </div>
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    
<div id="report-orgs" class="inner-content on">
  <h2><span class="icon"></span>REPORT THIS PAGE</h2>
  <div class="padder">
    <div class="separator"></div>
    <form name="" action="" method="POST">
<input type="hidden" name="symbol" value="OPPF" class="js-form-data" />

  <div class="error-message js-error-message"></div>
  <div class="success-message js-success-message"></div>
    <fieldset class="last">
    <label for="report_email">Email Address</label>
    <span class="corner-wrapper">
      <input type="text" name="email" value="" class="trans-02s trans-color trans-box-shadow js-form-data" id="report_email" />
      <span class="corner corner-top-left"></span>
      <span class="corner corner-top-right"></span>
      <span class="corner corner-bottom-left"></span>
      <span class="corner corner-bottom-right"></span>
    </span>
  </fieldset>
    <fieldset>
    <label for="report_subject">URL</label>
    <span class="corner-wrapper">
      <input type="text" name="url" readonly="readonly" value="https://robertsspaceindustries.com/orgs/oppf" class="js-form-data" />
      <span class="corner corner-top-left"></span>
      <span class="corner corner-top-right"></span>
      <span class="corner corner-bottom-left"></span>
      <span class="corner corner-bottom-right"></span>
    </span>
    <label>Report Type</label>
    

  
    <a class="js-selectlist selectlist " rel="" href="">
    <div class="arrow"></div>
    <span>Please select the type best matching your report</span>
              <ul class="body">
              
                                                              <li class="js-option option " rel="namedispute" >
                                                                        Name Dispute
                                                    </li>
                                                                <li class="js-option option " rel="copyright" >
                                                                        Copyright Infringement
                                                    </li>
                                                                <li class="js-option option " rel="obscenity" >
                                                                        Obscene Content
                                                    </li>
                                                                <li class="js-option option " rel="abuse" >
                                                                        Abusive Conduct
                                                    </li>
                                                                <li class="js-option option " rel="other" >
                                                                        Other
                                                    </li>
                                          
            </ul>
        <input type="hidden" name="category" class="js-category js-form-data" id="category"/>
  </a>
    </fieldset>
  <fieldset>
    <label for="report_text">Details</label>
    <span class="corner-wrapper">
      <textarea name="text" class="trans-02s trans-color trans-box-shadow js-form-data" id="report_text" maxlength="2500"></textarea>
      <span class="corner corner-top-left"></span>
      <span class="corner corner-top-right"></span>
      <span class="corner corner-bottom-left"></span>
      <span class="corner corner-bottom-right"></span>
    </span>
  </fieldset>
  <fieldset class="clearfix last">
    <span class="submit-wrapper">
      <span class="submit-hover trans-02s trans-opacity"></span>
      <input type="submit" value="Submit" class="trans-02s trans-color trans-background" />
    </span>
  </fieldset>
</form>    <div class="separator"></div>
  </div>
</div>

    
  </div>
  <div class="bottom-border">
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
  </div>
</div></script>
  <script id="tpl_orgs_deny" type="text/x-jsmart-tmpl"><div class="modal-wrapper orgs-deny">
  <div class="top-border">
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
  </div>
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    
<div id="orgs-deny" class="inner-content">
  <h3>RESPONSE</h3>
  <textarea></textarea>
  <div class="clear"></div>
  <a class="shadow-button trans-02s trans-color green js-deny-send"     >
  <span class="label js-label trans-02s">Send</span>
  <span class="icon trans-02s"><span class="effect trans-opacity trans-03s"></span></span>
  <span class="left-section"></span>
  <span class="right-section"></span>
</a>
  </div>

    
  </div>
  <div class="bottom-border">
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
  </div>
</div></script>
  <script id="tpl_orgs_apply" type="text/x-jsmart-tmpl"><div class="modal-wrapper ">
  <div class="top-border">
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
  </div>
  <div class="modal-inner">
    <a class="close js-close trans-03s .trans-opacity" href=""></a>
    
<div id="apply-orgs" class="inner-content on">
  <h2><span class="icon"></span>Apply to OPPF</h2>
  <div class="padder">
    <div class="separator"></div>
    <form action="" method="post" accept-charset="utf-8">
	<div class="explanation-message">
		Hi<br />
<br />
Org 1.5 has dropped giving us all the ability to be in multiple Orgs. As such we have opened the Operation Pitchfork Organization for recruiting. As you may know we have held it closed until now to prevent folks from having to choose between their home organization and Pitchfork. Now that this is no longer the case, the Operation Pitchfork organization&rsquo;s goal is to help us better organize, tactically coordinate, and communicate.<br />
<br />
I would ask if you have a home organization, that you keep that as your main. We in no way want replace your current associations, only augment them. When applying it would help if you could include your home organization&rsquo;s Spectrum ID along with your rank in stars (0 to 5) within that Org. We will only be setting ranks for people currently in an Org and this is only to maintain their home Org rank levels. It does not reflect authority within Operation Pitchfork..<br />
<br />
All that said Welcome Aboard!<br />
<br />
For Operation Pitchfork<br />
sailor
	</div>
  <div class="error-message js-error-message"></div>
  <div class="success-message js-success-message"></div>
	
	<fieldset>
		<label>Your application:</label>
		<span class="corner-wrapper">
			<input type="hidden" name="symbol" value="OPPF" class="js-form-data">
			<textarea name="message" class="trans-02s trans-color trans-box-shadow js-form-data" id="contact_text"></textarea>
      <span class="corner corner-top-left"></span>
      <span class="corner corner-top-right"></span>
      <span class="corner corner-bottom-left"></span>
      <span class="corner corner-bottom-right"></span>
		</span>
	</fieldset>
  
  <fieldset>
    <label>Membership:</label>
    <span class="corner-wrapper">
      

  
    <a class="js-selectlist selectlist w170" rel="" href="">
    <div class="arrow"></div>
    <span></span>
              <ul class="body">
              
                                                              <li class="js-option option selected" rel="V" >
                                                                        Visible
                                                    </li>
                                                                <li class="js-option option " rel="R" >
                                                                        Redacted
                                                    </li>
                                                                <li class="js-option option " rel="H" >
                                                                        Hidden Affiliation
                                                    </li>
                                          
            </ul>
        <input type="hidden" name="visibility" class="js-visibility js-form-data" id="visibility"/>
  </a>
    </fieldset>
  
	<fieldset class="clearfix last">
    <span class="submit-wrapper">
      <span class="submit-hover trans-02s trans-opacity"></span>
      <input type="submit" value="Submit" class="trans-02s trans-color trans-background" />
    </span>
  </fieldset>
</form>
    <div class="separator"></div>
  </div>
</div>

    
  </div>
  <div class="bottom-border">
    <div class="h-border"></div>
    <div class="l-corner"></div>
    <div class="r-corner"></div>
    
    <img src="/rsi/static/images/modal_blue_line.png" />
    
  </div>
</div></script>


      <div class="c-cross-brand-footer__wrapper">
  <footer class="c-cross-brand-footer c-cross-brand-footer__rsi" data-section-current="rsi">


    <div class="c-cross-brand-footer-sitemap c-cross-brand-footer-sitemap--rsi">
      <div class="c-cross-brand-footer-sitemap__corner c-cross-brand-footer-sitemap__corner--left js-svg-inliner"></div>
      <div class="c-cross-brand-footer-sitemap__corner c-cross-brand-footer-sitemap__corner--right js-svg-inliner"></div>

      <div class="c-cross-brand-footer-section c-cross-brand-footer-brands">
        <div class="l-column c-cross-brand-footer-brand c-cross-brand-footer-brand-sc  js-hover-active-pannel">
          <a href="/star-citizen" class="c-brand c-brand--sc">
            <span class="c-brand__logo">
              <span class="js-svg-inliner h-svg h-svg__logo-star-citizen"></span>
              <span class="js-svg-inliner h-svg h-svg__logo-star-citizen--fullcolor"></span>
            </span>

            Join the<br>Universe</a>
          <a href="/star-citizen" class="c-link">About the Game</a>
          <a href="/star-citizen/howto/1" class="c-link">How to Play</a>
          <a href="/star-citizen/universe" class="c-link">The Universe</a>
          <a href="/star-citizen/media" class="c-link">Media</a>
          <a href="/star-citizen/fly-now" class="c-link js-analytics">Fly Now</a>

          <a class="c-arrow-link js-toggle-open-related" href="#social-links__sc">
            <span class="c-arrow-link__arrow js-svg-inliner"></span>
            <span class="c-arrow-link__text c-arrow-link__text--underline">Social Links</span>
          </a>
          <div id="social-links__sc" class="l-social-links">
            <a class="c-link c-link--icon" href="https://www.facebook.com/RobertsSpaceIndustries/">
              <span class="c-iconed__icon c-iconed__icon--facebook"></span>
              Facebook
            </a>
            <a class="c-link" href="https://twitter.com/RobertsSpaceInd">
              <span class="c-iconed__icon c-iconed__icon--twitter"></span>
              Twitter
            </a>
            <a class="c-link" href="https://www.instagram.com/robertsspaceind">
              <span class="c-iconed__icon c-iconed__icon--instagram"></span>
              Instagram
            </a>
            <a class="c-link" href=" https://www.youtube.com/channel/UCTeLqJq1mXUX5WWoNXLmOIA">
              <span class="c-iconed__icon c-iconed__icon--youtube"></span>
              Youtube
            </a>
            <a class="c-link" href="https://www.twitch.tv/starcitizen">
              <span class="c-iconed__icon c-iconed__icon--twitch"></span>
              Twitch
            </a>
          </div>

        </div>
        <div class="l-column c-cross-brand-footer-brand c-cross-brand-footer-brand-s42  js-hover-active-pannel">
          <a href="/squadron42" class="c-brand c-brand--s42">
            <span class="c-brand__logo">
              <span class="js-svg-inliner h-svg h-svg__logo-squadron42"></span>
              <span class="js-svg-inliner h-svg h-svg__logo-squadron42--fullcolor"></span>
            </span>

            Start the<br>Adventure</a>
          <a href="/squadron42" class="c-link">The Game</a>
          <a href="/squadron42#enlist" class="c-link">Enlist Today</a>
          <a href="/squadron42#roadmap" class="c-link">Status</a>
          <a href="/pledge/Packages/Squadron-42-Standalone-Pledge" class="c-link">Pledge</a>

          <a class="c-arrow-link js-toggle-open-related" href="#social-links__s42">
            <span class="c-arrow-link__arrow js-svg-inliner"></span>
            <span class="c-arrow-link__text c-arrow-link__text--underline">Social Links</span>
          </a>
          <div id="social-links__s42" class="l-social-links">
            <a class="c-link c-link--icon" href="https://www.facebook.com/Squad42/">
              <span class="c-iconed__icon c-iconed__icon--facebook"></span>
              Facebook
            </a>
            <a class="c-link" href="https://twitter.com/squadron_42">
              <span class="c-iconed__icon c-iconed__icon--twitter"></span>
              Twitter
            </a>
            <a class="c-link" href="https://www.instagram.com/squadron42">
              <span class="c-iconed__icon c-iconed__icon--instagram"></span>
              Instagram
            </a>

          </div>

        </div>
        <div class="l-column c-cross-brand-footer-brand c-cross-brand-footer-brand-rsi is-active js-hover-active-pannel">
          <a href="/" class="c-brand c-brand--rsi">
            <span class="c-brand__logo">
              <span class="js-svg-inliner h-svg h-svg__logo-rsi"></span>
              <span class="js-svg-inliner h-svg h-svg__logo-rsi--fullcolor"></span>
            </span>

            Follow the Development
          <a href="/comm-link" class="c-link">Transmissions</a>
          <a href="/community" class="c-link">Community</a>
          <a href="/roadmap" class="c-link">Development</a>
        </div>
        <div class="l-column l-column--spacer"></div>

      </div>
      <div class="c-cross-brand-footer-section c-cross-brand-footer-links">
        <div class="l-column c-cross-brand-footer-links c-cross-brand-footer-links-store">
          <h2 class="c-cross-brand-footer-links-title">Platform</h2>
          <a href="/pledge" class="c-link">Pledge Store</a>
          <a href="/download" class="c-link">Download</a>
          <a href="/spectrum/community/SC" class="c-link">Spectrum</a>
                      <a href="/citizencon" class="c-link">Citizencon</a>
                  </div>
        <div class="l-column c-cross-brand-footer-links c-cross-brand-footer-links-utilities">
          <h2 class="c-cross-brand-footer-links-title">Utilities</h2>
          <a href="//support.robertsspaceindustries.com" class="c-link">Help</a>
          <a href="/press" class="c-link">Press</a>
          <a href="https://cloudimperiumgames.com/jobs" class="c-link">Careers</a>
          <a href="/tos" class="c-link">Terms of Services</a>
          <a href="/privacy" class="c-link">Privacy Policy</a>
          <a href="/eula" class="c-link">EULA</a>
          <a href="/dmca" class="c-link">DMCA</a>
         <a href="/acknowledgements" class="c-link">Acknowledgements</a>
        </div>

        <div class="l-column l-column--spacer"></div>

      </div>
    </div>
    


    <div class="c-copyright c-copyright--rsi">
      <div class="c-copyright__corner c-copyright__corner--left js-svg-inliner"></div>
      <div class="c-copyright__corner c-copyright__corner--right js-svg-inliner"></div>
      <a href="https://cloudimperiumgames.com" class="c-copyright__logo h-svg__logo-cig js-svg-inliner"></a>
      <p class="c-copyright__body">© 2018 Cloud Imperium Games Corp. & Roberts Space Industries Corp. & Cloud Imperium Games UK, Ltd. and Roberts Space Industries International, Ltd.</p>
    </div>

    
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHNFZPT"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->


  </footer>
</div>    </div>

  </body>
</html>

    http_version: 
  recorded_at: Thu, 09 Aug 2018 07:31:12 GMT
recorded_with: VCR 4.0.0
