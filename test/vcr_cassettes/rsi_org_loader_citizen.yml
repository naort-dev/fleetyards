---
http_interactions:
- request:
    method: get
    uri: https://robertsspaceindustries.com/citizens/torlekmaru
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 09 Aug 2018 07:24:46 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - Rsi-Token=2db4295e768a152b7244b718a1301be8; path=/; domain=.robertsspaceindustries.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      X-Cfu-Rendertime:
      - '0.010763883590698'
      X-Rsi-Version:
      - 1.8.8.0
      X-Frame-Options:
      - SameOrigin
      X-Cfu-Hostname:
      - web
      X-Cfu-Invoketime:
      - '0.1096830368042'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 09 Aug 2018 07:24:46 GMT
- request:
    method: get
    uri: https://robertsspaceindustries.com/citizens/torlekmaru/organizations
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 09 Aug 2018 07:24:46 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - Rsi-Token=3728494f394506da2f817ae6c5e43ea8; path=/; domain=.robertsspaceindustries.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      X-Cfu-Rendertime:
      - '0.0099968910217285'
      X-Rsi-Version:
      - 1.8.8.0
      X-Frame-Options:
      - SameOrigin
      X-Cfu-Hostname:
      - web
      X-Cfu-Invoketime:
      - '0.044564962387085'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 09 Aug 2018 07:24:46 GMT
recorded_with: VCR 4.0.0
