image: registry.gitlab.com/fleetyards/api:2.5.1

cache:
  key: gems
  paths:
    - vendor/bundle

variables:
  TZ: Europe/Berlin
  RAILS_ENV: test
  DATABASE_USER: fleetyards
  DATABASE_HOST: postgres
  POSTGRES_DB: fleetyards_test
  POSTGRES_USER: $DATABASE_USER
  POSTGRES_PASSWORD: ""
  LC_ALL: C.UTF-8

stages:
  - checks
  - tests
  - deploy

.default_template: &default_template
  before_script:
    - "bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=$(nproc) --retry=3"

audit:
  <<: *default_template
  script:
    - "bundle exec bundle-audit update"
    - "bundle exec bundle-audit check"
  stage: checks

rubocop:
  <<: *default_template
  script:
    - "bundle exec rubocop --format progress"
  stage: checks

.test_template: &test_template
  before_script:
    - "bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=$(nproc) --retry=3"
    - "bundle exec thor setup:dev_env"
    - "bundle exec rails db:schema:load"
  services:
    - postgres:latest
  stage: test

unit_tests:
  <<: *test_template
  script:
    - "bundle exec rails test"
  stage: tests

.deploy_template: &deploy_template
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - 'eval $(ssh-agent -s)'
    - 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - 'mkdir -p ~/.ssh'
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - "bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=$(nproc) --retry=3"

deploy:
  <<: *deploy_template
  script:
    - "bundle exec mina deploy"
  stage: deploy
  environment: Live
  except:
    - schedules
  only:
    - master
  when: manual

