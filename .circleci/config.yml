version: 2.0

defaults: &defaults
  working_directory: ~/app
  docker:
    - image: fleetyards/base:2.6.6
      environment:
        BUNDLE_PATH: ~/app/vendor/bundle

ruby-defaults: &ruby-defaults
  working_directory: ~/app
  docker:
    - image: fleetyards/base:2.6.6
      environment:
        RAILS_ENV: test
        BUNDLE_PATH: ~/app/vendor/bundle
        DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards_test
        DATABASE_HOST: 127.0.0.1
        DATABASE_USER: root
        JOBS: 1
        NODE_OPTIONS: --max-old-space-size=1024
    - image: circleci/postgres:9.5.16-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: fleetyards_test

seeds: &seeds
  working_directory: ~/app
  docker:
    - image: fleetyards/base:2.6.6
      environment:
        RAILS_ENV: test
        BUNDLE_PATH: ~/app/vendor/bundle
        DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards_test
        DATABASE_HOST: 127.0.0.1
        DATABASE_USER: root
        JOBS: 1
    - image: circleci/postgres:9.5.16-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: fleetyards_test
    - image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
      environment:
        cluster.name: fleetyards-test-cluster
        xpack.security.enabled: false
        transport.host: localhost
        network.host: 127.0.0.1
        http.port: 9200
        discovery.type: single-node
        ES_JAVA_OPTS: -Xms512m -Xmx512m

e2e: &e2e
  working_directory: ~/app
  docker:
    - image: fleetyards/ci:2.6.6
      environment:
        DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards
        TEST_SEEDS: 1
        BUNDLE_PATH: ~/app/vendor/bundle
        RAILS_ENV: ci
        ON_SUBDOMAIN: 1
        RAILS_SERVE_STATIC_FILES: 1
        DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
        CYPRESS_CI: 1
        JOBS: 1
        APP_DIR: .
        PORT: 8270
        CYPRESS_BASE_URL: http://localhost:8270
    - image: circleci/postgres:9.5.16-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: root
        POSTGRES_DB: fleetyards
    - image: circleci/redis:5.0.3-alpine
    - image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
      environment:
        cluster.name: fleetyards-test-cluster
        xpack.security.enabled: false
        transport.host: localhost
        network.host: 127.0.0.1
        http.port: 9200
        discovery.type: single-node
        ES_JAVA_OPTS: -Xms512m -Xmx512m

smokeTest: &smokeTest
  working_directory: ~/app
  docker:
    - image: fleetyards/ci:2.6.6
      environment:
        CYPRESS_BASE_URL: https://stage.fleetyards.net

jobs:
  health-check:
    docker:
      - image: fleetyards/health:latest
    steps:
      - run: curl --write-out '%{http_code}' --silent --fail --output /dev/null https://fleetyards.net

  bundle:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-bundle-{{ checksum "Gemfile.lock" }}
            - v3-bundle-
      - run: bundle install
      - save_cache:
          key: v3-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: /root
          paths:
            - app/vendor/bundle

  yarn:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-yarn-{{ checksum "yarn.lock" }}
            - v4-yarn-
      - run: yarn install
      - save_cache:
          key: v4-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/app/node_modules
            - /root/.cache/Cypress
      - persist_to_workspace:
          root: /root
          paths:
            - app/node_modules
            - .cache/Cypress

  bundle-audit:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: bundle install
      - run:
          name: Update Audit DB
          command: bundle exec bundle-audit update
      - run:
          name: Check Audit DB
          command: bundle exec bundle-audit check

  yarn-audit:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: yarn install
      - run:
          name: Check Audit DB
          command: yarn audit

  rubocop:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: bundle install
      - run:
          name: rubocoptering
          command: bundle exec rubocop --format progress

  js-lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: yarn install
      - run: yarn run lint:js
      - run: yarn run lint:vue
      - run: yarn run lint:style

  ruby-tests:
    <<: *ruby-defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: bundle install
      - run: mkdir -p ~/app/log
      - run: bundle exec rails db:create db:schema:load
      - run:
          name: Run Unit Tests
          command: bundle exec rails test:coverage
      - store_test_results:
          path: ~/app/test/reports

  js-tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: yarn install
      - run:
          name: Run Javascript Tests
          command: yarn test:coverage

  seeds:
    <<: *seeds
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: bundle install
      - run: mkdir -p ~/app/log
      - run: bundle exec rails db:create db:schema:load
      - run:
          name: Create ES Index
          command: bundle exec thor search:index
      - run:
          name: Run Seeds
          command: bundle exec rails db:seed

  assets:
    <<: *ruby-defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: bundle install
      - run: yarn install
      - restore_cache:
          keys:
            - v1-assets-{{ .Environment.CIRCLE_SHA1 }}
            - v1-assets-
      - run:
          name: Webpacker & Assets Compile
          command: RAILS_ENV=production bundle exec rails assets:precompile
      - save_cache:
          key: v1-assets-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/app/public/assets
            - ~/app/public/packs
            - ~/app/tmp/cache/webpacker
      - persist_to_workspace:
          root: /root
          paths:
            - app/public/assets
            - app/public/packs
            - app/tmp/cache/webpacker

  e2e-test:
    <<: *e2e
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: bundle install
      - run: yarn install
      - run: mkdir -p ~/app/log && mkdir -p tmp/pids && rm -f tmp/pids/*
      - run:
          name: Setup DB
          command: bundle exec rails db:create db:schema:load
      - run:
          name: Create ES Index
          command: bundle exec thor search:index
      - run:
          name: Prefill DB
          command: bundle exec rails db:seed
      - run:
          name: Run Server
          command: bundle exec puma -C config/puma.rb
          background: true
      - run:
          name: Wait for Server
          command: |
              until $(curl --output /dev/null --silent --head --fail $CYPRESS_BASE_URL); do
                  printf '.'
                  sleep 5
              done
      - run:
          name: Run E2E Tests
          command: yarn run test:e2e --record
      - store_artifacts:
          path: ~/app/cypress/snapshots
          destination: e2e-snapshots
      - store_artifacts:
          path: ~/app/cypress/screenshots
          destination: e2e-screenshots

  smoke-test:
    <<: *smokeTest
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-yarn-{{ checksum "yarn.lock" }}
            - v4-yarn-
      - run: yarn install
      - run:
          name: Run E2E Tests
          command: yarn run test:e2e --record
      - store_artifacts:
          path: ~/app/cypress/snapshots
          destination: e2e-snapshots
      - store_artifacts:
          path: ~/app/cypress/screenshots
          destination: e2e-screenshots

  deploy-to-stage:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-bundle-{{ checksum "Gemfile.lock" }}
            - v3-bundle-
      - run: bundle install
      - add_ssh_keys:
          fingerprints:
            - "b9:00:09:c3:96:48:ed:1e:90:c1:03:bc:3c:7d:14:59"
      - run:
          name: Keyscan Erebor (HACK)
          command: ssh-keyscan -H erebor.mortik.xyz >> ~/.ssh/known_hosts
      - run:
          name: Keyscan Github (HACK)
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: Deploy
          command: bundle exec cap stage deploy

  deploy-to-live:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-bundle-{{ checksum "Gemfile.lock" }}
            - v3-bundle-
      - run: bundle install
      - add_ssh_keys:
          fingerprints:
            - "b9:00:09:c3:96:48:ed:1e:90:c1:03:bc:3c:7d:14:59"
      - run:
          name: Keyscan Erebor (HACK)
          command: ssh-keyscan -H erebor.mortik.xyz >> ~/.ssh/known_hosts
      - run:
          name: Keyscan Github (HACK)
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: Deploy
          command: bundle exec cap live deploy

  notify-discord-stage:
    docker:
      - image: fleetyards/base:2.6.6
    steps:
      - run: |
          curl -X POST $DISCORD_WEBHOOK_STAGE \
          -H 'Content-Type: application/json' \
          -d "{\"content\": \"**New Stage Release:**\" }"

  notify-discord-live:
    docker:
      - image: fleetyards/base:2.6.6
    steps:
      - run: |
          curl -X POST $DISCORD_WEBHOOK \
          -H 'Content-Type: application/json' \
          -d "{\"content\": \"**New Release:** $CIRCLE_TAG\nhttps://github.com/fleetyards/fleetyards/releases/tag/$CIRCLE_TAG\" }"

workflows:
  version: 2
  check:
    triggers:
      - schedule:
          cron: "0 20 * * *"
          filters:
            branches:
              only: master
    jobs:
      - bundle
      - yarn
      - bundle-audit:
          requires:
            - bundle
      - yarn-audit:
          requires:
            - yarn

  health:
    triggers:
      - schedule:
          cron: "0 18 * * *"
          filters:
            branches:
              only: master
    jobs:
      - health-check

  main:
    jobs:
      - bundle
      - yarn
      - rubocop:
          requires:
            - bundle
      - js-lint:
          requires:
            - yarn
      - ruby-tests:
          requires:
            - bundle
      - js-tests:
          requires:
            - yarn
      - seeds:
          requires:
            - bundle
      - assets:
          requires:
            - bundle
      - e2e-test:
          requires:
            - assets
            - rubocop
            - ruby-tests
            - js-tests
            - js-lint
      - smoke-test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-to-stage:
          requires:
            - seeds
            - e2e-test
          filters:
            branches:
              only: master
      - notify-discord-stage:
          requires:
            - deploy-to-stage
      - deploy-to-live:
          requires:
            - smoke-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - notify-discord-live:
          requires:
            - deploy-to-live
          filters:
            tags:
              only: /^v.*/
