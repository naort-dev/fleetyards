version: 2.1

ciImage: &ciImage
  image: fleetyards/ci:3.0.2
  auth:
    username: $DOCKERHUB_USER
    password: $DOCKERHUB_PASSWORD
  environment:
    RAILS_ENV: test
    BUNDLE_PATH: ~/app/vendor/bundle
    DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards_test
    DATABASE_HOST: 127.0.0.1
    DATABASE_USER: root
    ELASTICSEARCH_URL: http://localhost:9200
    JOBS: 1
    NODE_OPTIONS: --max-old-space-size=1024

defaults: &defaults
  working_directory: ~/app
  docker:
    - *ciImage

jobs:
  health-check:
    docker:
      - image: fleetyards/health:latest
    steps:
      - run: curl --write-out '%{http_code}' --silent --fail --output /dev/null https://fleetyards.net

  bundle:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-bundle-{{ checksum "Gemfile.lock" }}
            - v3-bundle-
      - run: bundle install
      - save_cache:
          key: v3-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: /root
          paths:
            - app/vendor/bundle

  yarn:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-yarn-{{ checksum "Gemfile.lock" }}
            - v4-yarn-
      - run: yarn install
      - save_cache:
          key: v4-yarn-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/app/node_modules
            - /root/.cache/Cypress
      - persist_to_workspace:
          root: /root
          paths:
            - app/node_modules
            - .cache/Cypress

  bundle-audit:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: bundle install
      - run:
          name: Update Audit DB
          command: bundle exec bundle-audit update
      - run:
          name: Check Audit DB
          command: bundle exec bundle-audit check

  yarn-audit:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /root
      - run: yarn install
      - run:
          name: Check Audit DB
          command: yarn audit --groups dependencies

workflows:
  version: 2
  check:
    triggers:
      - schedule:
          cron: "0 20 * * *"
          filters:
            branches:
              only: main
    jobs:
      - bundle
      - yarn
      - bundle-audit:
          requires:
            - bundle
      - yarn-audit:
          requires:
            - yarn

  health:
    triggers:
      - schedule:
          cron: "0 18 * * *"
          filters:
            branches:
              only: main
    jobs:
      - health-check
