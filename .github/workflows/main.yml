name: CI

on: [push]

defaults: &defaults
  runs-on: ubuntu-latest
  container: fleetyards/base:2.6.6
  env:
    RAILS_ENV: test
    DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards_test
  services:
    postgres:
      image: postgres:10.1-alpine
      env:
        POSTGRES_USER: root
        POSTGRES_DB: fleetyards_test
        POSTGRES_PASSWORD: ""
      ports:
        - 5432:5432
      # Add a health check
      options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
      env:
        cluster.name: fleetyards-test-cluster
        xpack.security.enabled: false
        transport.host: localhost
        network.host: 127.0.0.1
        http.port: 9200
        discovery.type: single-node
        ES_JAVA_OPTS: -Xms512m -Xmx512m
      ports:
        - 9200:9200

jobs:
  checkout:
    <<: *defaults
    steps:
    - uses: actions/checkout@v2
    - name: persist workspace
      uses: actions/upload-artifact@v1
      with:
        name: workspace
        path: ./

  bundle:
    <<: *defaults
    needs: checkout
    steps:
    - name: load workspace
      uses: actions/download-artifact@v1
      with:
        name: workspace
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install Ruby Dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

  yarn:
    <<: *defaults
    needs: checkout
    steps:
    - name: load workspace
      uses: actions/download-artifact@v1
      with:
        name: workspace
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install JS Dependencies
      run: yarn --frozen-lockfile

  bundle-audit:
    <<: *defaults
    needs: bundle
    steps:
    - name: load workspace
      uses: actions/download-artifact@v1
      with:
        name: workspace
    - name: Update Audit DB
      run: bundle exec bundle-audit update
    - name: Check Audit DB
      run: bundle exec bundle-audit check

  yarn-audit:
    <<: *defaults
    needs: yarn
    steps:
    - name: load workspace
      uses: actions/download-artifact@v1
      with:
        name: workspace
    - name: Check Audit DB
      run: yarn audit

  rubocop:
    <<: *defaults
    needs: bundle
    steps:
    - name: load workspace
      uses: actions/download-artifact@v1
      with:
        name: workspace
    - name: rubocoptering
      run: bundle exec rubocop --format progress

  js-lint:
    <<: *defaults
    needs: yarn
    steps:
    - name: load workspace
      uses: actions/download-artifact@v1
      with:
        name: workspace
    - name: JS Lint
      run: yarn run lint:js
