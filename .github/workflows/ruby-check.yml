name: Ruby Check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  prep:
    runs-on: ubuntu-latest
    container: fleetyards/base:2.6.6
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          
  rubocoptering:
    runs-on: ubuntu-latest
    container: fleetyards/base:2.6.6
    needs: [prep]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: rubocoptering
        run: bundle exec rubocop --format progress
        
  tests:
    runs-on: ubuntu-latest
    container: fleetyards/base:2.6.6
    needs: [prep]
    env:
      RAILS_ENV: test
      DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards_test
      DATABASE_HOST: 127.0.0.1
      DATABASE_USER: root
    services:
      postgres:
        image: postgres:10.1-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_DB: fleetyards_test
          POSTGRES_PASSWORD: ""
        ports:
          - 5432:5432
        # Add a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: tests
        run: |
          mkdir -p log
          bundle exec rails db:create db:schema:load
          bundle exec rails test:coverage
      - name: store test results
        uses: actions/upload-artifact@v1
        with:
          name: ruby-test-results
          path: test/reports
